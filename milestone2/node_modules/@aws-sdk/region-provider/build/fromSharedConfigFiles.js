"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var property_provider_1 = require("@aws-sdk/property-provider");
var shared_ini_file_loader_1 = require("@aws-sdk/shared-ini-file-loader");
var DEFAULT_PROFILE = 'default';
exports.ENV_PROFILE = 'AWS_PROFILE';
function fromSharedConfigFiles(init) {
    if (init === void 0) { init = {}; }
    return function () {
        var _a = init.loadedConfig, loadedConfig = _a === void 0 ? shared_ini_file_loader_1.loadSharedConfigFiles(init) : _a, _b = init.profile, profile = _b === void 0 ? process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE : _b;
        return loadedConfig.then(function (_a) {
            var configFile = _a.configFile, credentialsFile = _a.credentialsFile;
            var e_1, _b;
            try {
                for (var _c = tslib_1.__values([credentialsFile, configFile]), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var file = _d.value;
                    var region = (file[profile] || {}).region;
                    if (typeof region === 'string') {
                        return region;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            throw new property_provider_1.ProviderError("No region found for profile " + profile + " in SDK configuration files");
        });
    };
}
exports.fromSharedConfigFiles = fromSharedConfigFiles;
//# sourceMappingURL=fromSharedConfigFiles.js.map