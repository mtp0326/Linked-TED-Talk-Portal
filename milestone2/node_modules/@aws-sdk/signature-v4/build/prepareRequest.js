"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cloneRequest_1 = require("./cloneRequest");
const constants_1 = require("./constants");
/**
 * @internal
 */
function prepareRequest(request) {
    // Create a clone of the request object that does not clone the body
    request = cloneRequest_1.cloneRequest(request);
    for (let headerName of Object.keys(request.headers)) {
        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
            delete request.headers[headerName];
        }
    }
    if (!(constants_1.HOST_HEADER in request.headers)) {
        request.headers[constants_1.HOST_HEADER] = request.hostname;
    }
    return request;
}
exports.prepareRequest = prepareRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlcGFyZVJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcHJlcGFyZVJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxpREFBOEM7QUFDOUMsMkNBQTZEO0FBRTdEOztHQUVHO0FBQ0gsU0FBZ0IsY0FBYyxDQUM1QixPQUFnQztJQUVoQyxvRUFBb0U7SUFDcEUsT0FBTyxHQUFHLDJCQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFaEMsS0FBSyxJQUFJLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNuRCxJQUFJLDZCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUM1RCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDcEM7S0FDRjtJQUVELElBQUksQ0FBQyxDQUFDLHVCQUFXLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ3JDLE9BQU8sQ0FBQyxPQUFPLENBQUMsdUJBQVcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7S0FDakQ7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDO0FBakJELHdDQWlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcbmltcG9ydCB7IEdFTkVSQVRFRF9IRUFERVJTLCBIT1NUX0hFQURFUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZVJlcXVlc3Q8U3RyZWFtVHlwZT4oXG4gIHJlcXVlc3Q6IEh0dHBSZXF1ZXN0PFN0cmVhbVR5cGU+XG4pOiBIdHRwUmVxdWVzdDxTdHJlYW1UeXBlPiB7XG4gIC8vIENyZWF0ZSBhIGNsb25lIG9mIHRoZSByZXF1ZXN0IG9iamVjdCB0aGF0IGRvZXMgbm90IGNsb25lIHRoZSBib2R5XG4gIHJlcXVlc3QgPSBjbG9uZVJlcXVlc3QocmVxdWVzdCk7XG5cbiAgZm9yIChsZXQgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhyZXF1ZXN0LmhlYWRlcnMpKSB7XG4gICAgaWYgKEdFTkVSQVRFRF9IRUFERVJTLmluZGV4T2YoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgIH1cbiAgfVxuXG4gIGlmICghKEhPU1RfSEVBREVSIGluIHJlcXVlc3QuaGVhZGVycykpIHtcbiAgICByZXF1ZXN0LmhlYWRlcnNbSE9TVF9IRUFERVJdID0gcmVxdWVzdC5ob3N0bmFtZTtcbiAgfVxuXG4gIHJldHVybiByZXF1ZXN0O1xufVxuIl19