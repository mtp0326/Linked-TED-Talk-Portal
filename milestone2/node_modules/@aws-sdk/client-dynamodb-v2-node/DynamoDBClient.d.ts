/// <reference types="node" />
import * as __aws_sdk_middleware_stack from '@aws-sdk/middleware-stack';
import * as __aws_sdk_types from '@aws-sdk/types';
import * as _stream from 'stream';
import { DynamoDBConfiguration, DynamoDBResolvedConfiguration } from './DynamoDBConfiguration';
import { InputTypesUnion } from './types/InputTypesUnion';
import { OutputTypesUnion } from './types/OutputTypesUnion';
export declare class DynamoDBClient {
    protected readonly config: DynamoDBResolvedConfiguration;
    readonly middlewareStack: __aws_sdk_middleware_stack.MiddlewareStack<InputTypesUnion, OutputTypesUnion, _stream.Readable>;
    constructor(configuration: DynamoDBConfiguration);
    destroy(): void;
    /**
     * This will need to be revised when the command interface lands.
     */
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, DynamoDBResolvedConfiguration, _stream.Readable>): Promise<OutputType>;
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, DynamoDBResolvedConfiguration, _stream.Readable>, cb: (err: any, data?: OutputType) => void): void;
}
